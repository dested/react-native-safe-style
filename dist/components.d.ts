import { ComponentType, ReactNode } from 'react';
import React from 'react';
import { SafeStyleSchema } from './index';
export declare function makeView<T, TColors extends string, TSpacing extends string, TBorderRadii extends string, TBaseClassesKeys extends string, TViewsKeys extends string, TTextsKeys extends string>(theme: SafeStyleSchema<TColors, TSpacing, TBorderRadii, TBaseClassesKeys, TViewsKeys, TTextsKeys>, Comp: ComponentType<T>): React.ForwardRefExoticComponent<React.PropsWithoutRef<(T | (T & {
    children?: ReactNode;
})) & { [key in TBaseClassesKeys | TViewsKeys]?: boolean | undefined; } & {
    backgroundColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    color?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    opacity?: number | undefined;
    margin?: number | `%${number}` | TSpacing | undefined;
    marginTop?: number | `%${number}` | TSpacing | undefined;
    marginRight?: number | `%${number}` | TSpacing | undefined;
    marginBottom?: number | `%${number}` | TSpacing | undefined;
    marginLeft?: number | `%${number}` | TSpacing | undefined;
    marginHorizontal?: number | `%${number}` | TSpacing | undefined;
    marginVertical?: number | `%${number}` | TSpacing | undefined;
    padding?: number | `%${number}` | TSpacing | undefined;
    paddingTop?: number | `%${number}` | TSpacing | undefined;
    paddingRight?: number | `%${number}` | TSpacing | undefined;
    paddingBottom?: number | `%${number}` | TSpacing | undefined;
    paddingLeft?: number | `%${number}` | TSpacing | undefined;
    paddingHorizontal?: number | `%${number}` | TSpacing | undefined;
    paddingVertical?: number | `%${number}` | TSpacing | undefined;
    m?: number | `%${number}` | TSpacing | undefined;
    mt?: number | `%${number}` | TSpacing | undefined;
    mr?: number | `%${number}` | TSpacing | undefined;
    mb?: number | `%${number}` | TSpacing | undefined;
    ml?: number | `%${number}` | TSpacing | undefined;
    mh?: number | `%${number}` | TSpacing | undefined;
    mv?: number | `%${number}` | TSpacing | undefined;
    p?: number | `%${number}` | TSpacing | undefined;
    pt?: number | `%${number}` | TSpacing | undefined;
    pr?: number | `%${number}` | TSpacing | undefined;
    pb?: number | `%${number}` | TSpacing | undefined;
    pl?: number | `%${number}` | TSpacing | undefined;
    ph?: number | `%${number}` | TSpacing | undefined;
    pv?: number | `%${number}` | TSpacing | undefined;
    fontFamily?: string | undefined;
    fontSize?: number | undefined;
    fontStyle?: "normal" | "italic" | undefined;
    fontWeight?: "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined;
    letterSpacing?: number | undefined;
    lineHeight?: number | undefined;
    textAlign?: "right" | "left" | "auto" | "center" | "justify" | undefined;
    textDecorationLine?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
    textDecorationStyle?: "solid" | "dotted" | "dashed" | "double" | undefined;
    textTransform?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
    width?: string | number | undefined;
    height?: string | number | undefined;
    minWidth?: string | number | undefined;
    maxWidth?: string | number | undefined;
    minHeight?: string | number | undefined;
    maxHeight?: string | number | undefined;
    overflow?: "visible" | "hidden" | "scroll" | undefined;
    aspectRatio?: number | undefined;
    alignContent?: "center" | "flex-start" | "flex-end" | "stretch" | "space-between" | "space-around" | undefined;
    alignItems?: import("react-native").FlexAlignType | undefined;
    alignSelf?: "auto" | import("react-native").FlexAlignType | undefined;
    justifyContent?: "center" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | undefined;
    flex?: number | undefined;
    flexBasis?: string | number | undefined;
    flexDirection?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    flexGrow?: number | undefined;
    flexShrink?: number | undefined;
    flexWrap?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
    position?: "absolute" | "relative" | undefined;
    top?: string | number | undefined;
    right?: string | number | undefined;
    bottom?: string | number | undefined;
    left?: string | number | undefined;
    zIndex?: number | undefined;
    borderBottomWidth?: number | undefined;
    borderLeftWidth?: number | undefined;
    borderRightWidth?: number | undefined;
    borderStyle?: "solid" | "dotted" | "dashed" | undefined;
    borderTopWidth?: number | undefined;
    borderWidth?: number | undefined;
    borderColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderTopColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderRightColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderLeftColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderBottomColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderRadius?: number | TBorderRadii | undefined;
    borderBottomLeftRadius?: number | TBorderRadii | undefined;
    borderBottomRightRadius?: number | TBorderRadii | undefined;
    borderTopLeftRadius?: number | TBorderRadii | undefined;
    borderTopRightRadius?: number | TBorderRadii | undefined;
    shadowOpacity?: number | undefined;
    shadowOffset?: {
        width: number;
        height: number;
    } | undefined;
    shadowRadius?: number | undefined;
    elevation?: number | undefined;
    shadowColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    textShadowOffset?: {
        width: number;
        height: number;
    } | undefined;
    textShadowRadius?: number | undefined;
    textShadowColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    tintColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    transform?: (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
    transformMatrix?: number[] | undefined;
    rotation?: number | undefined;
    scaleX?: number | undefined;
    scaleY?: number | undefined;
    translateX?: number | undefined;
    translateY?: number | undefined;
} & {
    debugStyle?: boolean | undefined;
}> & React.RefAttributes<ComponentType<T>>>;
export declare function makeText<T, TColors extends string, TSpacing extends string, TBorderRadii extends string, TBaseClassesKeys extends string, TViewsKeys extends string, TTextsKeys extends string>(theme: SafeStyleSchema<TColors, TSpacing, TBorderRadii, TBaseClassesKeys, TViewsKeys, TTextsKeys>, Comp: ComponentType<T>): React.ForwardRefExoticComponent<React.PropsWithoutRef<(T | (T & {
    children?: ReactNode;
})) & { [key in TBaseClassesKeys | TTextsKeys]?: boolean | undefined; } & {
    backgroundColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    color?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    opacity?: number | undefined;
    margin?: number | `%${number}` | TSpacing | undefined;
    marginTop?: number | `%${number}` | TSpacing | undefined;
    marginRight?: number | `%${number}` | TSpacing | undefined;
    marginBottom?: number | `%${number}` | TSpacing | undefined;
    marginLeft?: number | `%${number}` | TSpacing | undefined;
    marginHorizontal?: number | `%${number}` | TSpacing | undefined;
    marginVertical?: number | `%${number}` | TSpacing | undefined;
    padding?: number | `%${number}` | TSpacing | undefined;
    paddingTop?: number | `%${number}` | TSpacing | undefined;
    paddingRight?: number | `%${number}` | TSpacing | undefined;
    paddingBottom?: number | `%${number}` | TSpacing | undefined;
    paddingLeft?: number | `%${number}` | TSpacing | undefined;
    paddingHorizontal?: number | `%${number}` | TSpacing | undefined;
    paddingVertical?: number | `%${number}` | TSpacing | undefined;
    m?: number | `%${number}` | TSpacing | undefined;
    mt?: number | `%${number}` | TSpacing | undefined;
    mr?: number | `%${number}` | TSpacing | undefined;
    mb?: number | `%${number}` | TSpacing | undefined;
    ml?: number | `%${number}` | TSpacing | undefined;
    mh?: number | `%${number}` | TSpacing | undefined;
    mv?: number | `%${number}` | TSpacing | undefined;
    p?: number | `%${number}` | TSpacing | undefined;
    pt?: number | `%${number}` | TSpacing | undefined;
    pr?: number | `%${number}` | TSpacing | undefined;
    pb?: number | `%${number}` | TSpacing | undefined;
    pl?: number | `%${number}` | TSpacing | undefined;
    ph?: number | `%${number}` | TSpacing | undefined;
    pv?: number | `%${number}` | TSpacing | undefined;
    fontFamily?: string | undefined;
    fontSize?: number | undefined;
    fontStyle?: "normal" | "italic" | undefined;
    fontWeight?: "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined;
    letterSpacing?: number | undefined;
    lineHeight?: number | undefined;
    textAlign?: "right" | "left" | "auto" | "center" | "justify" | undefined;
    textDecorationLine?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
    textDecorationStyle?: "solid" | "dotted" | "dashed" | "double" | undefined;
    textTransform?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
    width?: string | number | undefined;
    height?: string | number | undefined;
    minWidth?: string | number | undefined;
    maxWidth?: string | number | undefined;
    minHeight?: string | number | undefined;
    maxHeight?: string | number | undefined;
    overflow?: "visible" | "hidden" | "scroll" | undefined;
    aspectRatio?: number | undefined;
    alignContent?: "center" | "flex-start" | "flex-end" | "stretch" | "space-between" | "space-around" | undefined;
    alignItems?: import("react-native").FlexAlignType | undefined;
    alignSelf?: "auto" | import("react-native").FlexAlignType | undefined;
    justifyContent?: "center" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | undefined;
    flex?: number | undefined;
    flexBasis?: string | number | undefined;
    flexDirection?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    flexGrow?: number | undefined;
    flexShrink?: number | undefined;
    flexWrap?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
    position?: "absolute" | "relative" | undefined;
    top?: string | number | undefined;
    right?: string | number | undefined;
    bottom?: string | number | undefined;
    left?: string | number | undefined;
    zIndex?: number | undefined;
    borderBottomWidth?: number | undefined;
    borderLeftWidth?: number | undefined;
    borderRightWidth?: number | undefined;
    borderStyle?: "solid" | "dotted" | "dashed" | undefined;
    borderTopWidth?: number | undefined;
    borderWidth?: number | undefined;
    borderColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderTopColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderRightColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderLeftColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderBottomColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    borderRadius?: number | TBorderRadii | undefined;
    borderBottomLeftRadius?: number | TBorderRadii | undefined;
    borderBottomRightRadius?: number | TBorderRadii | undefined;
    borderTopLeftRadius?: number | TBorderRadii | undefined;
    borderTopRightRadius?: number | TBorderRadii | undefined;
    shadowOpacity?: number | undefined;
    shadowOffset?: {
        width: number;
        height: number;
    } | undefined;
    shadowRadius?: number | undefined;
    elevation?: number | undefined;
    shadowColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    textShadowOffset?: {
        width: number;
        height: number;
    } | undefined;
    textShadowRadius?: number | undefined;
    textShadowColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    tintColor?: (`#${string}` | `hsl(${string})` | `rgba(${string})`) | TColors | undefined;
    transform?: (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
    transformMatrix?: number[] | undefined;
    rotation?: number | undefined;
    scaleX?: number | undefined;
    scaleY?: number | undefined;
    translateX?: number | undefined;
    translateY?: number | undefined;
} & {
    debugStyle?: boolean | undefined;
}> & React.RefAttributes<ComponentType<T>>>;
